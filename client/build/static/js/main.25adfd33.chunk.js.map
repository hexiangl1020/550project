{"version":3,"sources":["components/MenuBar.js","fetcher.js","pages/CharacterPage.js","pages/HomePage.js","pages/Movieprofile.js","pages/ActorPage.js","pages/ActorPercent.js","pages/MoviePage.js","index.js"],"names":["theme","createTheme","palette","type","primary","main","secondary","background","default","paper","error","warning","info","MenuBar","React","ThemeProvider","AppBar","position","Container","maxWidth","Toolbar","disableGutters","sx","display","xs","md","mr","Typography","variant","noWrap","component","href","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","Button","Link","to","my","getcharacterMbtiList","value","a","fetch","config","server_host","server_port","method","res","json","gettop5mvmbti","getmvmatches","getmvmbtipct","getCharacter","movieId","name","getMovie","getCharacterSameMBTI","getCharacterSameActorMBTI","rankbymbti","actorpct","getAllMovies","title","startYearLow","startYearHigh","RatingLow","RatingHigh","getMovieCharacterList","Column","format","Table","sameMbtiColumns","ColumnGroup","dataIndex","key","render","img_url","style","width","height","src","CharacterPage","props","state","characterName","mbti","movieDetails","sameActorMbti","sameMbti","goToMovie","bind","goToCharacter","window","location","this","movie_id","mvid","match","params","setState","then","result","results","margin","marginTop","gutter","align","justify","flex","textAlign","referrerpolicy","alt","cursor","onClick","primaryTitle","length","className","dataSource","columns","pagination","pageSizeOptions","defaultPageSize","showQuickJumper","onRow","record","rowIndex","event","Name","primaryName","character_name","Component","withRouter","Option","Select","characterColumns","top5Columns","HomePage","allcharacters","PageNumber","PageSize","matchesResults","top5","MbtiOnChange","top5MbtiOnChange","goToMatch","defaultValue","onChange","MoviePage","movieResults","movieCharacters","movie_idQuery","pctresults","series","options","labels","handleQueryChange","updateSearchResults","target","i","primaryNameQuery","concat","percentage","startYear","averageRating","actorColumns","sorter","b","localeCompare","count","ActorPage","actor_id","mbtiQuery","countQuery","actorsResults","handlePrimaryNameQueryChange","handleActorIdQueryChange","handlembtiQueryChange","handleCountQueryChange","actid","goToActorPtc","ActorPercentPage","percentageQuery","handlepercentageQueryChange","MoviesPage","titleQuery","ratingLow","ratingHigh","moviesResults","handleTitleQueryChange","handleYearQueryChange","handleRatingQueryChange","goToMovieProfile","dates","dateStrings","parseInt","placeholder","RangePicker","picker","range","step","max","ReactDOM","exact","path","ActorPercent","Movieprofile","document","getElementById"],"mappings":"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","file":"static/js/main.25adfd33.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { Link } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst pages = [\n  ['Home', '/'],\n  ['Movies', '/movieList'],\n  ['Actors', '/actormbtiplayed'],\n];\n// const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\nconst theme = createTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#26a69a',\n    },\n    secondary: {\n      main: '#ec407a',\n    },\n    background: {\n      default: 'rgba(224,242,241,0.49)',\n      paper: '#fffde7',\n    },\n    error: {\n      main: '#f44336',\n    },\n    warning: {\n      main: '#ff7043',\n    },\n    info: {\n      main: '#26a69a',\n    },\n  },\n});\n\nconst MenuBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position='static'>\n        <Container maxWidth='xl'>\n          <Toolbar disableGutters>\n            <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n            <Typography\n              variant='h6'\n              noWrap\n              component='a'\n              href='/'\n              sx={{\n                mr: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              MBTI\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              <Button\n                key='home'\n                component={Link}\n                to='/'\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                Home\n              </Button>\n              <Button\n                key='movies'\n                component={Link}\n                to='/movieList'\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                Movies\n              </Button>\n              <Button\n                key='actors'\n                component={Link}\n                to='/actormbtiplayed'\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                Actors\n              </Button>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </ThemeProvider>\n  );\n};\nexport default MenuBar;\n","import config from './config.json';\nconst getcharacterMbtiList = async (value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/characterMbtiList?mbti=${value}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getmbtiMatches = async (page, pagesize, value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/mbti_matches/${value}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst gettop5mvmbti = async (value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/top5mvmbti?mbti=${value}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getmvmatches = async (value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/movie/${value}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getmvmbtipct = async (value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/mvpct/${value}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getCharacter = async (movieId, name) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/character/${movieId}/${name}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getMovie = async (movieId) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/movie/${movieId}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getCharacterSameMBTI = async (movieId, name) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/findcsametype?mid=${movieId}&cname=${name}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst getCharacterSameActorMBTI = async (movieId, name) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/samembtiactor?mvid=${movieId}&name=${name}`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst rankbymbti = async (value) => {\n  var res = await fetch(\n    `http://${config.server_host}:${config.server_port}/actormbtiplayed`,\n    {\n      method: 'GET',\n    }\n  );\n  return res.json();\n};\n\nconst actorpct = async (value) => {\n    var res = await fetch(`http://${config.server_host}:${config.server_port}/actorpct/${value}`, {\n        method: 'GET',\n    })\n    return res.json()\n}\n\nconst getAllMovies = async (\n    title,\n    startYearLow,\n    startYearHigh,\n    RatingLow,\n    RatingHigh\n  ) => {\n    var res = await fetch(\n      `http://${config.server_host}:${config.server_port}/movieList?title=${title}&startYearLow=${startYearLow}&startYearHigh=${startYearHigh}&RatingLow=${RatingLow}&RatingHigh=${RatingHigh}`,\n      {\n        method: 'GET',\n      }\n    );\n    return res.json();\n  }\n\nconst getMovieCharacterList = async (value) => {\n    var res = await fetch(`http://${config.server_host}:${config.server_port}/movieCharacterList?mvid=${value}`, {\n        method: 'GET',\n    })\n    return res.json()\n}\n\nexport {\n    getcharacterMbtiList,\n    getmbtiMatches,\n    gettop5mvmbti,\n    getmvmatches,\n    getmvmbtipct,\n    getCharacter,\n    getMovie,\n    getCharacterSameMBTI,\n    getCharacterSameActorMBTI,\n    rankbymbti,\n    actorpct,\n    getAllMovies,\n    getMovieCharacterList\n}\n","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n} from 'shards-react';\r\n\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Slider,\r\n  Rate,\r\n} from 'antd';\r\nimport { RadarChart } from 'react-vis';\r\nimport { format } from 'd3-format';\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getCharacter, getMovie,getCharacterSameActorMBTI,getCharacterSameMBTI } from '../fetcher';\r\nconst wideFormat = format('.3r');\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst sameMbtiColumns = [\r\n  {\r\n    title: '',\r\n    dataIndex: 'img_url',\r\n    key: 'img_url',\r\n    render:  img_url => img_url=='https://www.personality-database.com/images/profile_transparent.png' || img_url==null ? <img style={{ width: '10vw', height: '10vw'}} src='https://www.booksie.com/files/profiles/22/mr-anonymous_230x230.png' /> : <img style={{ width: '10vw', height: '10vw'}} src={img_url} /> \r\n  },\r\n  {\r\n    title:'Character',\r\n    dataIndex:'Name',\r\n    key:'Name'\r\n  },\r\n  {\r\n    title: 'Movie Title',\r\n    dataIndex: 'movie_title',\r\n    key: 'movie_title',\r\n  }\r\n];\r\n\r\nclass CharacterPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieId:'',\r\n      characterName:'',\r\n      mbti:'',\r\n      img_url:'',\r\n      movieDetails:null,\r\n      sameActorMbti:[],\r\n      sameMbti:[]\r\n    };\r\n    this.goToMovie = this.goToMovie.bind(this);\r\n    this.goToCharacter = this.goToCharacter.bind(this)\r\n\r\n  }\r\n\r\n  goToMovie(){\r\n    window.location = `/movie/${this.state.movieDetails.movie_id}`;\r\n  }\r\n\r\n  goToCharacter(mvid, name) {\r\n    window.location = `/characterInfo/${mvid}/${name}`\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { movieId, name } = this.props.match.params;\r\n\r\n    this.setState({ movieId: movieId });\r\n    this.setState({ characterName:name })\r\n    \r\n    getCharacter(movieId, name).then((res) => {\r\n      const result = res.results[0];\r\n      this.setState({ mbti: result.mbti });\r\n      this.setState({ img_url: result.img_url });\r\n    });\r\n\r\n    getMovie(movieId).then((res) => {\r\n      const result = res.results[0];\r\n      this.setState({ movieDetails: result });\r\n    });\r\n\r\n    getCharacterSameMBTI(movieId, name).then((res) => {\r\n      const result = res.results;\r\n      this.setState({ sameMbti: result });\r\n    });\r\n\r\n    getCharacterSameActorMBTI(movieId, name).then((res) => {\r\n      const result = res.results;\r\n      this.setState({ sameActorMbti: result });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MenuBar />\r\n          <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n            <Card style={{ width: '50vw', margin: '0 auto', background: '#fcf9e8'}}>\r\n              <CardBody>\r\n                <Row gutter='30' align='middle' justify='center'>\r\n                  <Col flex={2} style={{ textAlign: 'left' }}>\r\n                    <h3>{this.state.characterName}</h3>\r\n                  </Col>\r\n\r\n                  <Col flex={2} style={{ textAlign: 'right' }}>\r\n                    <img\r\n                      src={this.state.img_url}\r\n                      referrerpolicy='no-referrer'\r\n                      alt={null}\r\n                      style={{ height: '20vh' }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter='30' align='middle' justify='left'>\r\n                  <Col>\r\n                    <h5>MBTI: {this.state.mbti}</h5>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter='30' align='middle' justify='left' style={{cursor:'pointer'}} onClick={this.goToMovie}>\r\n                  <Col>\r\n                    <h5>Movie: {this.state.movieDetails && this.state.movieDetails.primaryTitle}</h5>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody> \r\n            </Card>\r\n            <Divider />\r\n            {this.state.sameMbti.length>0 ? (\r\n              <div className='sameMbtiActor'>\r\n                <Row gutter='30' align='middle' justify='center'>\r\n                  <h5>Other \"{this.state.mbti}\" Characters</h5> \r\n                </Row>\r\n                <Table\r\n                  dataSource={this.state.sameMbti}\r\n                  style={{cursor:'pointer'}}\r\n                  columns={sameMbtiColumns}\r\n                  pagination={{\r\n                    pageSizeOptions: [5, 10],\r\n                    defaultPageSize: 5,\r\n                    showQuickJumper: true,\r\n                  }}\r\n                  onRow={(record, rowIndex) => {\r\n                    return {\r\n                      onClick: event => {this.goToCharacter(record.movie_id, record.Name)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \r\n                    };\r\n                  }}\r\n                >\r\n                </Table>\r\n              </div>): null}\r\n\r\n\r\n            <Divider />\r\n            {this.state.sameActorMbti.length>0 ? (\r\n              <div className='sameMbtiActor'>\r\n                <Row gutter='30' align='middle' justify='center'>\r\n                  <h5>Other \"{this.state.mbti}\" Characters Played by {this.state.sameActorMbti[0].primaryName}</h5> \r\n                </Row>\r\n                <Table\r\n                  style={{cursor:'pointer'}}\r\n                  dataSource={this.state.sameActorMbti}\r\n                  onRow={(record, rowIndex) => {\r\n                    return {\r\n                      onClick: event => {this.goToCharacter(record.movie_id, record.character_name)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \r\n                    };\r\n                  }}\r\n                >\r\n                  <Column title='Character Name' dataIndex='character_name' key='character_name' />\r\n                  <Column title='Movie Title' dataIndex='movie_title' key='movie_title' />\r\n                </Table>\r\n              </div>): null}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CharacterPage);\r\n","import React from 'react';\nimport { Table, Pagination, Select } from 'antd';\n\nimport MenuBar from '../components/MenuBar';\nimport {\n  getcharacterMbtiList,\n  getmbtiMatches,\n  gettop5mvmbti,\n} from '../fetcher';\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst characterColumns = [\n  {\n    title: '',\n    dataIndex: 'img_url',\n    key: 'img_url',\n    render:  img_url => img_url=='https://www.personality-database.com/images/profile_transparent.png' || img_url==null ? <img style={{ width: '10vw', height: '10vw'}} src='https://www.booksie.com/files/profiles/22/mr-anonymous_230x230.png' /> : <img style={{ width: '10vw', height: '10vw'}} src={img_url} /> \n\n  },\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    // sorter: (a, b) => a.Name.localeCompare(b.Name),\n    //render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'Movie Name',\n    dataIndex: 'primaryTitle',\n    key: 'primaryTitle',\n    // sorter: (a, b) => a.movie_id.localeCompare(b.movie_id),\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n  },\n];\n\nconst top5Columns = [\n  {\n    title: 'Movie Name',\n    dataIndex: 'movie_title',\n    key: 'movie_title',\n  },\n\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n  },\n];\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allcharacters: [],\n      PageNumber: 1,\n      PageSize: 10,\n      matchesResults: [],\n      top5: [],\n    };\n    this.MbtiOnChange=this.MbtiOnChange.bind(this)\n    this.top5MbtiOnChange=this.top5MbtiOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n    this.goToMovie = this.goToMovie.bind(this)\n\n  }\n  goToMatch(mvid, name) {\n    window.location = `/characterInfo/${mvid}/${name}`;\n  }\n\n  goToMovie(mvid) {\n    window.location = `/movie/${mvid}`\n  }\n\n  MbtiOnChange(value) {\n    getcharacterMbtiList(value).then((res) => {\n      this.setState({ allcharacters: res.results });\n    });\n  }\n\n  top5MbtiOnChange(value) {\n    gettop5mvmbti(value).then((res) => {\n      this.setState({ top5: res.results });\n    });\n  }\n\n  componentDidMount() {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getcharacterMbtiList('').then((res) => {\n      this.setState({ allcharacters: res.results });\n    });\n    // getmbtiMatches(null, null, 'ESFP').then(res => {\n    //   this.setState({ matchesResults: res.results })\n    // })\n    gettop5mvmbti('ISTJ').then((res) => {\n      this.setState({ top5: res.results });\n    });\n  }\n\n  render() {\n    return (\n      <div className='HomePage'>\n        <MenuBar />\n        <div style={{ width: '65vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>All MBTI characters</h3>\n          <Select\n            defaultValue=''\n            style={{ width: 200 }}\n            onChange={this.MbtiOnChange}\n          >\n            <Option value=''>All types</Option>\n            <Option value='ISTJ'>The Inspector ISTJ</Option>\n            <Option value='ISTP'>The Crafter ISTP</Option>\n            <Option value='ISFJ'>The Protector ISFJ</Option>\n            <Option value='ISFP'>The Artist ISFP</Option>\n            <Option value='INFJ'>The Advocate INFJ</Option>\n            <Option value='INFP'>The Mediator INFP</Option>\n            <Option value='INTJ'>The Architect INTJ</Option>\n            <Option value='INTP'>The Thinker INTP</Option>\n            <Option value='ESTP'>The Persuader ESTP</Option>\n            <Option value='ESTJ'>The Director ESTJ</Option>\n            <Option value='ESFP'>The Performer ESFP</Option>\n            <Option value='ESFJ'>The Caregiver ESFJ</Option>\n            <Option value='ENFP'>The Champion ENFP</Option>\n            <Option value='ENFJ'>The Giver ENFJ</Option>\n            <Option value='ENTP'>The Debater ENTP</Option>\n            <Option value='ENTJ'>The Commander ENTJ</Option>\n          </Select>\n          <Table\n            dataSource={this.state.allcharacters}\n            columns={characterColumns}\n            style={{cursor:'pointer'}}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: (event) => {\n                  this.goToMatch(record.movie_id, record.Name);\n                }, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter\n              };\n            }}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n        <div style={{ width: '65vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>🔥Top5 Movies With Most MBTI Characters</h3>\n          <Select\n            defaultValue='ISTJ'\n            style={{ width: 200 }}\n            onChange={this.top5MbtiOnChange}\n          >\n            <Option value='ISTJ'>The Inspector ISTJ</Option>\n            <Option value='ISTP'>The Crafter ISTP</Option>\n            <Option value='ISFJ'>The Protector ISFJ</Option>\n            <Option value='ISFP'>The Artist ISFP</Option>\n            <Option value='INFJ'>The Advocate INFJ</Option>\n            <Option value='INFP'>The Mediator INFP</Option>\n            <Option value='INTJ'>The Architect INTJ</Option>\n            <Option value='INTP'>The Thinker INTP</Option>\n            <Option value='ESTP'>The Persuader ESTP</Option>\n            <Option value='ESTJ'>The Director ESTJ</Option>\n            <Option value='ESFP'>The Performer ESFP</Option>\n            <Option value='ESFJ'>The Caregiver ESFJ</Option>\n            <Option value='ENFP'>The Champion ENFP</Option>\n            <Option value='ENFJ'>The Giver ENFJ</Option>\n            <Option value='ENTP'>The Debater ENTP</Option>\n            <Option value='ENTJ'>The Commander ENTJ</Option>\n          </Select>\n          \n          <Table\n            style={{cursor:'pointer'}}\n            dataSource={this.state.top5}\n            columns={top5Columns}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: event => {this.goToMovie(record.movie_id)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n              };\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport {\n  Form,\n  FormInput,\n  FormGroup,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Progress,\n} from 'shards-react';\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate,\n} from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport Chart from \"react-apexcharts\";\nimport MenuBar from '../components/MenuBar';\nimport { getmvmatches,getmvmbtipct,getMovieCharacterList} from '../fetcher';\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst characterColumns = [\n  {\n    title: '',\n    dataIndex: 'img_url',\n    key: 'img_url',\n    render:  img_url => img_url=='https://www.personality-database.com/images/profile_transparent.png' || img_url==null ? <img style={{ width: '10vw', height: '10vw'}} src='https://www.booksie.com/files/profiles/22/mr-anonymous_230x230.png' /> : <img style={{ width: '10vw', height: '10vw'}} src={img_url} /> \n  },\n  {\n    title: 'Character',\n    dataIndex: 'Name',\n    key: 'Name',\n  },\n  {\n    title: 'MBTI',\n    dataIndex: 'mbti',\n    key: 'mbti',\n  },\n  {\n    title: 'Actor',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n  }\n];\n\nclass MoviePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageNumber: 1,\n      PageSize: 10,\n      movieResults:[],\n      movieCharacters:[],\n      movie_idQuery:'',\n      pctresults:[],\n      series: [],\n      options: {},\n      labels: []\n    };\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.updateSearchResults = this.updateSearchResults.bind(this)\n    this.goToCharacter = this.goToCharacter.bind(this)\n\n  }\n\n  goToCharacter(mvid, name) {\n    window.location = `/characterInfo/${mvid}/${name}`\n  }\n  \n  handleQueryChange(event) {\n    this.setState({ movie_idQuery: event.target.value });\n  }\n\n  updateSearchResults() {\n    getmvmatches(this.state.movie_idQuery).then(res => {\n        this.setState({ movieResults: res.results })\n    })\n\n    getmvmbtipct(this.state.movie_idQuery).then(res => {\n      this.setState({ pctresults: res.results })\n    })\n\n    getmvmbtipct(this.state.movie_idQuery).then((res) => {\n      this.setState({ pctresults: res.results });\n    });\n  }\n\n  componentDidMount() {\n    const { mvid } = this.props.match.params;\n    this.setState({ movie_idQuery: mvid });\n\n    getmvmatches(mvid).then(res => {\n      this.setState({ movieResults: res.results[0] })\n    })\n\n    getMovieCharacterList(mvid).then(res => {\n      this.setState({ movieCharacters: res.results })\n    })\n    \n\n    getmvmbtipct(mvid).then(res => {\n      this.setState({ pctresults: res.results });\n          for (var i = 0; i < this.state.pctresults.length; i++){\n            this.setState({ primaryNameQuery: res.results[0].primaryName})\n            this.setState({\n                series: this.state.series.concat(this.state.pctresults[i].percentage)\n              });\n            \n            \n            this.setState({\n                labels: this.state.labels.concat(this.state.pctresults[i].mbti)\n              });\n            }\n          this.setState({options : {labels: this.state.labels}})\n        });\n  }\n\n  render() {\n    return (\n      <div className='movieProfile'>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <Card style={{ width: '50vw', margin: '0 auto', background: '#fcf9e8'}}>\n            <CardBody>\n              <Row gutter='30' align='middle' justify='center'>\n                <Col flex={2} style={{ textAlign: 'left' }}>\n                  <h3>{this.state.movieResults.primaryTitle}</h3>\n                </Col>\n              </Row>\n              <Row gutter='30' align='middle' justify='left'>\n                <Col>\n                  <h5>Start Year: {this.state.movieResults.startYear}</h5>\n                </Col>\n              </Row>\n              <Row gutter='30' align='middle' justify='left'>\n                <Col>\n                  <h5>\n                    AverageRating: {this.state.movieResults.averageRating}\n                  </h5>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </div>\n        {this.state.movieCharacters.length>0 ? (\n          <div className='movieCharacters' style={{ width: '70vw', margin: '0 auto', marginTop: '3vh' }}>\n            <Table\n              dataSource={this.state.movieCharacters}\n              columns={characterColumns}\n              style={{cursor:'pointer'}}\n              onRow={(record, rowIndex) => {\n                return {\n                  onClick: event => {this.goToCharacter(record.movie_id, record.Name)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                };\n              }}\n            >\n            </Table>\n            <Divider />\n          </div>): null}\n        {this.state.pctresults.length>0 ? (<div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>MBTI Percentage</h3>\n          <div className=\"ActorPercentPage\">\n              <div className=\"row\">\n                  <div className=\"mixed-chart\">\n                      <Chart options={this.state.options} series={this.state.series} type=\"pie\" width={750} />\n                  </div>\n              </div>\n          </div>\n        </div>) : null}\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MoviePage);\n","import React from 'react';\nimport {\n  Form,\n  FormInput,\n  FormGroup,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Progress,\n} from 'shards-react';\n\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate,\n} from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\nimport MenuBar from '../components/MenuBar';\nimport { rankbymbti } from '../fetcher';\nconst wideFormat = format('.3r');\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst actorColumns = [\n  //   {\n  //       title: 'actor_id',\n  //       dataIndex: 'actor_id',\n  //       key: 'actor_id',\n  //     //   sorter: (a, b) => a.actor_id.localeCompare(b.actor_id),\n  //   },\n  {\n    title: 'primaryName',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n    sorter: (a, b) => a.primaryName.localeCompare(b.primaryName),\n    // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  },\n  {\n    title: 'count',\n    dataIndex: 'count',\n    key: 'count',\n    sorter: (a, b) => a.count - b.count,\n  },\n  // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actor_id: '',\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      countQuery: '',\n      actorsResults: [],\n      pctresults: [],\n    };\n\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n\n    this.handlePrimaryNameQueryChange =\n      this.handlePrimaryNameQueryChange.bind(this);\n    this.handleActorIdQueryChange = this.handleActorIdQueryChange.bind(this);\n    this.handlembtiQueryChange = this.handlembtiQueryChange.bind(this);\n    this.handleCountQueryChange = this.handleCountQueryChange.bind(this);\n    // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n  goToActorPtc(actid) {\n    window.location = `/actorpct/${actid}`;\n  }\n\n  handleActorIdQueryChange(event) {\n    this.setState({ actor_id: event.target.value });\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({ primaryNameQuery: event.target.value });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ mbtiQuery: event.target.value });\n  }\n\n  handleCountQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ countQuery: event.target.value });\n  }\n\n  //   handleRatingChange(value) {\n  //     this.setState({ ratingLowQuery: value[0] });\n  //     this.setState({ ratingHighQuery: value[1] });\n  //   }\n\n  //   handlePotentialChange(value) {\n  //     // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\n  //     this.setState({ potLowQuery: value[0] });\n  //     this.setState({ potHighQuery: value[1] });\n  //   }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    rankbymbti(\n      //   this.state.nameQuery,\n      //   this.state.nationalityQuery,\n      //   this.state.clubQuery,\n      //   this.state.ratingHighQuery,\n      //   this.state.ratingLowQuery,\n      //   this.state.potHighQuery,\n      //   this.state.potLowQuery,\n      null\n    ).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n  }\n\n  componentDidMount() {\n    rankbymbti(null).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n  }\n\n  render() {\n    return (\n      <div className='ActorPage'>\n        <MenuBar />\n        {/* <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>Actor ID</label>\n                    <FormInput placeholder=\"nm000000\" value={this.state.actor_id} onChange={this.handleActorIdQueryChange} />\n                </FormGroup></Col>\n                <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.goToActorPtc(this.state.actor_id)}>Search</Button>\n                        </FormGroup></Col>\n            </Row>\n\n        </Form> */}\n        <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Actors</h3>\n          <Table\n            dataSource={this.state.actorsResults}\n            columns={actorColumns}\n            style={{cursor:'pointer'}}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: (event) => {\n                  this.goToActorPtc(record.actor_id);\n                }, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter\n              };\n            }}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n        {/* <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Percentage of MBTI types of characters the actor played </h3>\n          <Table\n            dataSource={this.state.pctresults}\n            columns={actorpctColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n          </div> */}\n      </div>\n    );\n  }\n}\n\nexport default ActorPage;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport Chart from \"react-apexcharts\";\n\nimport MenuBar from '../components/MenuBar';\nimport { actorpct } from '../fetcher';\nconst wideFormat = format('.3r');\n\nconst actorColumns = [\n//   {\n//       title: 'actor_id',\n//       dataIndex: 'actor_id',\n//       key: 'actor_id',\n//       sorter: (a, b) => a.actor_id.localeCompare(b.actor_id),\n//   },\n  {\n    title: 'primaryName',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n    sorter: (a, b) => a.primaryName.localeCompare(b.primaryName),\n    // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  },\n  {\n    title: 'percentage',\n    dataIndex: 'percentage',\n    key: 'percentage',\n    sorter: (a, b) => a.count - b.count,\n  }\n  // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPercentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actor_id: '',\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      percentageQuery: '',\n      actorsResults: [],\n      pctresults: [],\n      series: [],\n      options: {},\n      labels: []\n\n        \n      \n    };\n    \n\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    \n    this.handlePrimaryNameQueryChange = this.handlePrimaryNameQueryChange.bind(this);\n    this.handleActorIdQueryChange = this.handleActorIdQueryChange.bind(this);\n    this.handlembtiQueryChange =\n      this.handlembtiQueryChange.bind(this);\n    this.handlepercentageQueryChange = this.handlepercentageQueryChange.bind(this);\n    // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n//   goToActorPtc(actid) {\n//     window.location = `/actorpct/${actid}`\n//   }\n\n  handleActorIdQueryChange(event){\n    this.setState({ actor_id: event.target.value });\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({ primaryNameQuery: event.target.value });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ mbtiQuery: event.target.value });\n  }\n\n  handlepercentageQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ percentageQuery: event.target.value });\n  }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    actorpct(\n      this.state.actor_id\n    ).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n    \n  }\n\n  componentDidMount() {\n    const { actid } = this.props.match.params;\n    this.setState({ actor_id: actid });\n    actorpct(\n        actid\n        ).then((res) => {\n          \n          this.setState({ actorsResults: res.results });\n          for (var i = 0; i < this.state.actorsResults.length; i++){\n            this.setState({ primaryNameQuery: res.results[0].primaryName})\n            this.setState({\n                series: this.state.series.concat(this.state.actorsResults[i].percentage)\n              });\n            \n            \n            this.setState({\n                labels: this.state.labels.concat(this.state.actorsResults[i].mbti)\n              });\n            }\n          this.setState({options : {labels: this.state.labels}})\n        });\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        {/* <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>Actor ID</label>\n                    <FormInput placeholder=\"nm000000\" value={this.state.actor_id} onChange={this.handleActorIdQueryChange} />\n                </FormGroup></Col>\n                <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.goToActorPtc(this.state.actor_id)}>Search</Button>\n                        </FormGroup></Col>\n            </Row>\n\n        </Form> */}\n        {/* <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Actors</h3>\n          <Table\n            dataSource={this.state.actorsResults}\n            columns={actorColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div> */}\n        <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>{this.state.primaryNameQuery}</h3>\n        <div className=\"ActorPercentPage\">\n            <div className=\"row\">\n                <div className=\"mixed-chart\">\n                    <Chart options={this.state.options} series={this.state.series} type=\"pie\" width={750} />\n                </div>\n            </div>\n        </div>\n        </div>\n        {/* <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Percentage of MBTI types of characters the actor played </h3>\n          <Table\n            dataSource={this.state.pctresults}\n            columns={actorpctColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n          </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ActorPercentPage);\n","import React from 'react';\nimport { Form, FormInput, FormGroup, Button } from 'shards-react';\n\nimport { Table, Row, Col, Divider, DatePicker, Slider } from 'antd';\n\nimport { getAllMovies } from '../fetcher';\n\nimport MenuBar from '../components/MenuBar';\n\nimport '../index.css';\n\nconst { Column } = Table;\n\nclass MoviesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleQuery: '',\n      startYearLow: 1000,\n      startYearHigh: 3000,\n      ratingLow: 0,\n      ratingHigh: 10,\n      moviesResults: [],\n    };\n\n    this.handleTitleQueryChange = this.handleTitleQueryChange.bind(this);\n    this.handleYearQueryChange = this.handleYearQueryChange.bind(this);\n    this.handleRatingQueryChange = this.handleRatingQueryChange.bind(this);\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.goToMovieProfile = this.goToMovieProfile.bind(this);\n  }\n\n  handleTitleQueryChange(event) {\n    this.setState({\n      titleQuery: event.target.value,\n    });\n  }\n\n  handleYearQueryChange(dates, dateStrings) {\n    this.setState({\n      startYearLow: parseInt(dateStrings[0], 10),\n      startYearHigh: parseInt(dateStrings[1], 10),\n    });\n  }\n\n  handleRatingQueryChange(value) {\n    this.setState({\n      ratingLow: value[0],\n      ratingHigh: value[1],\n    });\n  }\n  goToMovieProfile(movieId) {\n    window.location = `/movie/${movieId}`;\n  }\n\n  updateSearchResults() {\n    getAllMovies(\n      this.state.titleQuery,\n      this.state.startYearLow,\n      this.state.startYearHigh,\n      this.state.ratingLow,\n      this.state.ratingHigh\n    ).then((res) => {\n      this.setState({ moviesResults: res.results });\n    });\n  }\n\n  componentDidMount() {\n    getAllMovies(\n      this.state.titleQuery,\n      this.state.startYearLow,\n      this.state.startYearHigh,\n      this.state.ratingLow,\n      this.state.ratingHigh\n    ).then((res) => {\n      this.setState({ moviesResults: res.results });\n    });\n  }\n\n  render() {\n    return (\n      <div className='MoviePage'>\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n          <Row>\n            <Col flex={2}>\n              <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                <label>Title</label>\n                <FormInput\n                  placeholder='Movie Title'\n                  value={this.state.titleQuery}\n                  onChange={this.handleTitleQueryChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col flex={2}>\n              <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                <label>Release Year</label>\n                <DatePicker.RangePicker\n                  picker='year'\n                  onChange={this.handleYearQueryChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col flex={2}>\n              <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                <Row>\n                  <label>Rating</label>\n                </Row>\n                <Slider\n                  range\n                  defaultValue={[0, 10]}\n                  step={0.1}\n                  max={10}\n                  onChange={this.handleRatingQueryChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col flex={2}>\n              <FormGroup style={{ width: '10vw' }}>\n                <Button\n                  style={{ marginTop: '4vh' }}\n                  onClick={this.updateSearchResults}\n                >\n                  Search\n                </Button>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n        <Divider />\n        <Table\n          onRow={(record, rowIndex) => {\n            return {\n              onClick: (event) => {\n                this.goToMovieProfile(record.movie_id);\n              }, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter\n            };\n          }}\n          dataSource={this.state.moviesResults}\n          pagination={{\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 10,\n            showQuickJumper: true,\n          }}\n          style={{ width: '80vw', margin: '0 auto', marginTop: '2vh',cursor:'pointer' }}\n        >\n          <Column\n            title='Title'\n            dataIndex='primaryTitle'\n            key='primaryTitle'\n            sorter={(a, b) => a.primaryTitle.localeCompare(b.primaryTitle)}\n          />\n          <Column\n            title='Release Date'\n            dataIndex='startYear'\n            key='startYear'\n            sorter={(a, b) => (a.startYear > b.startYear ? 1 : -1)}\n          />\n          <Column\n            title='Rating'\n            dataIndex='averageRating'\n            key='averageRating'\n            sorter={(a, b) => (a.averageRating > b.averageRating ? 1 : -1)}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport CharacterPage from './pages/CharacterPage';\nimport HomePage from './pages/HomePage';\nimport Movieprofile from './pages/Movieprofile';\nimport ActorPage from './pages/ActorPage';\nimport ActorPercentPage from './pages/ActorPercent';\nimport MoviePage from './pages/MoviePage';\nimport 'antd/dist/antd.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'shards-ui/dist/css/shards.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <div className='App'>\n    <Router>\n      <Switch>\n        <Route exact path='/' render={() => <HomePage />} />\n        <Route exact path='/actormbtiplayed' render={() => <ActorPage />} />\n        <Route path='/actorpct/:actid' render={() => <ActorPercentPage />} />\n\n        <Route\n          path='/characterInfo/:movieId/:name'\n          render={() => <CharacterPage />}\n        />\n        <Route path='/movie/:mvid' render={() => <Movieprofile />} />\n        <Route exact path='/movieList' render={() => <MoviePage />} />\n      </Switch>\n    </Router>\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
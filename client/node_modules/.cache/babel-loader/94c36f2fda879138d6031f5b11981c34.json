{"ast":null,"code":"var _jsxFileName = \"/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPage.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from 'shards-react';\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport MenuBar from '../components/MenuBar';\nimport { rankbymbti } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wideFormat = format('.3r');\nconst actorColumns = [{\n  title: 'primaryName',\n  dataIndex: 'primaryName',\n  key: 'primaryName',\n  sorter: (a, b) => a.primaryName.localeCompare(b.primaryName) // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n\n}, {\n  title: 'mbti',\n  dataIndex: 'mbti',\n  key: 'mbti',\n  sorter: (a, b) => a.mbti.localeCompare(b.mbti)\n}, {\n  title: 'count',\n  dataIndex: 'count',\n  key: 'count',\n  sorter: (a, b) => a.count - b.count\n} // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      countQuery: 0,\n      actorsResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handlePrimaryNameQueryChange = this.handlePrimaryNameQueryChange.bind(this);\n    this.handlembtiQueryChange = this.handlembtiQueryChange.bind(this);\n    this.handleCountQueryChange = this.handleCountQueryChange.bind(this); // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({\n      primaryNameQuery: event.target.value\n    });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      mbtiQuery: event.target.value\n    });\n  }\n\n  handleCountQueryChange(value) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      countQuery: value\n    });\n  } //   handleRatingChange(value) {\n  //     this.setState({ ratingLowQuery: value[0] });\n  //     this.setState({ ratingHighQuery: value[1] });\n  //   }\n  //   handlePotentialChange(value) {\n  //     // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\n  //     this.setState({ potLowQuery: value[0] });\n  //     this.setState({ potHighQuery: value[1] });\n  //   }\n\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    rankbymbti( //   this.state.nameQuery,\n    //   this.state.nationalityQuery,\n    //   this.state.clubQuery,\n    //   this.state.ratingHighQuery,\n    //   this.state.ratingLowQuery,\n    //   this.state.potHighQuery,\n    //   this.state.potLowQuery,\n    //   null,\n    null).then(res => {\n      this.setState({\n        actorsResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    rankbymbti( //   this.state.nameQuery,\n    //   this.state.nationalityQuery,\n    //   this.state.clubQuery,\n    //   this.state.ratingHighQuery,\n    //   this.state.ratingLowQuery,\n    //   this.state.potHighQuery,\n    //   this.state.potLowQuery,\n    //   null,\n    null).then(res => {\n      this.setState({\n        actorsResults: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"primaryName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"John Dow\",\n                value: this.state.primaryName,\n                onChange: this.handlePrimaryNameQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '4vh'\n                },\n                onClick: this.updateSearchResults,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Search a movie by movieID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.actorsResults,\n          columns: actorColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 10,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ActorPage;","map":{"version":3,"sources":["/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPage.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","RadarChart","format","MenuBar","rankbymbti","wideFormat","actorColumns","title","dataIndex","key","sorter","a","b","primaryName","localeCompare","mbti","count","ActorPage","Component","constructor","props","state","primaryNameQuery","mbtiQuery","countQuery","actorsResults","updateSearchResults","bind","handlePrimaryNameQueryChange","handlembtiQueryChange","handleCountQueryChange","event","setState","target","value","then","res","results","componentDidMount","render","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,QARF,QASO,cATP;AAWA,SACEC,KADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,IARF,QASO,MATP;AAUA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AACA,MAAMC,UAAU,GAAGH,MAAM,CAAC,KAAD,CAAzB;AAEA,MAAMI,YAAY,GAAG,CACnB;AACEC,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,SAAS,EAAE,aAFb;AAGEC,EAAAA,GAAG,EAAE,aAHP;AAIEC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,WAAF,CAAcC,aAAd,CAA4BF,CAAC,CAACC,WAA9B,CAJpB,CAKE;;AALF,CADmB,EAQnB;AACEN,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE,MAHP;AAIEC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,IAAF,CAAOD,aAAP,CAAqBF,CAAC,CAACG,IAAvB;AAJpB,CARmB,EAcnB;AACER,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI;AAJhC,CAdmB,CAoBnB;AApBmB,CAArB;;AAuBA,MAAMC,SAAN,SAAwBjC,KAAK,CAACkC,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,EADP;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAE,CAHD;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAOA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCD,IAAlC,CAAuC,IAAvC,CAApC;AACA,SAAKE,qBAAL,GACE,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CADF;AAEA,SAAKG,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BH,IAA5B,CAAiC,IAAjC,CAA9B,CAbiB,CAcjB;AACA;AACD;;AAEDC,EAAAA,4BAA4B,CAACG,KAAD,EAAQ;AAClC,SAAKC,QAAL,CAAc;AAAEV,MAAAA,gBAAgB,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAjC,KAAd;AACD;;AAEDL,EAAAA,qBAAqB,CAACE,KAAD,EAAQ;AAC3B;AACA,SAAKC,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAEDJ,EAAAA,sBAAsB,CAACI,KAAD,EAAQ;AAC5B;AACA,SAAKF,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAEU;AAAd,KAAd;AACD,GA/BqC,CAiCxC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEER,EAAAA,mBAAmB,GAAG;AACpB;AACAtB,IAAAA,UAAU,EACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QATQ,CAAV,CAUE+B,IAVF,CAUQC,GAAD,IAAS;AACd,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,aAAa,EAAEW,GAAG,CAACC;AAArB,OAAd;AACD,KAZD;AAaD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBlC,IAAAA,UAAU,EACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QATI,CAAV,CAUM+B,IAVN,CAUYC,GAAD,IAAS;AACd,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,aAAa,EAAEW,GAAG,CAACC;AAArB,OAAd;AACD,KAZL;AAaD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAb;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEF,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,UAAvB;AAAkC,gBAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWR,WAApD;AAAiE,gBAAA,QAAQ,EAAE,KAAKe;AAAhF;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEY,gBAAAA,KAAK,EAAE;AAAT,eAAlB;AAAA,qCACF,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAE;AAAEE,kBAAAA,SAAS,EAAE;AAAb,iBAAf;AAAqC,gBAAA,OAAO,EAAE,KAAKhB,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAK,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWI,aADzB;AAEE,UAAA,OAAO,EAAEnB,YAFX;AAGE,UAAA,UAAU,EAAE;AACVqC,YAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,EAAJ,CADP;AAEVC,YAAAA,eAAe,EAAE,EAFP;AAGVC,YAAAA,eAAe,EAAE;AAHP;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AAzHqC;;AA4HxC,eAAe5B,SAAf","sourcesContent":["import React from 'react';\nimport {\n  Form,\n  FormInput,\n  FormGroup,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Progress,\n} from 'shards-react';\n\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate,\n} from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\nimport MenuBar from '../components/MenuBar';\nimport { rankbymbti } from '../fetcher';\nconst wideFormat = format('.3r');\n\nconst actorColumns = [\n  {\n    title: 'primaryName',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n    sorter: (a, b) => a.primaryName.localeCompare(b.primaryName),\n    // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  },\n  {\n    title: 'count',\n    dataIndex: 'count',\n    key: 'count',\n    sorter: (a, b) => a.count - b.count,\n  }\n  // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      countQuery: 0,\n      actorsResults: [],\n    };\n\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handlePrimaryNameQueryChange = this.handlePrimaryNameQueryChange.bind(this);\n    this.handlembtiQueryChange =\n      this.handlembtiQueryChange.bind(this);\n    this.handleCountQueryChange = this.handleCountQueryChange.bind(this);\n    // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({ primaryNameQuery: event.target.value });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ mbtiQuery: event.target.value });\n  }\n\n  handleCountQueryChange(value) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ countQuery: value });\n  }\n\n//   handleRatingChange(value) {\n//     this.setState({ ratingLowQuery: value[0] });\n//     this.setState({ ratingHighQuery: value[1] });\n//   }\n\n//   handlePotentialChange(value) {\n//     // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\n//     this.setState({ potLowQuery: value[0] });\n//     this.setState({ potHighQuery: value[1] });\n//   }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    rankbymbti(\n    //   this.state.nameQuery,\n    //   this.state.nationalityQuery,\n    //   this.state.clubQuery,\n    //   this.state.ratingHighQuery,\n    //   this.state.ratingLowQuery,\n    //   this.state.potHighQuery,\n    //   this.state.potLowQuery,\n    //   null,\n      null\n    ).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n  }\n\n  componentDidMount() {\n    rankbymbti(\n        //   this.state.nameQuery,\n        //   this.state.nationalityQuery,\n        //   this.state.clubQuery,\n        //   this.state.ratingHighQuery,\n        //   this.state.ratingLowQuery,\n        //   this.state.potHighQuery,\n        //   this.state.potLowQuery,\n        //   null,\n          null\n        ).then((res) => {\n          this.setState({ actorsResults: res.results });\n        });\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>primaryName</label>\n                    <FormInput placeholder=\"John Dow\" value={this.state.primaryName} onChange={this.handlePrimaryNameQueryChange} />\n                </FormGroup></Col>\n                <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\n                        </FormGroup></Col>\n            </Row>\n\n        </Form>\n        <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Search a movie by movieID</h3>\n          <Table\n            dataSource={this.state.actorsResults}\n            columns={actorColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n        {/* <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Percentage of Each MBTI type of characters in this movie</h3>\n          <Table\n            dataSource={this.state.pctresults}\n            columns={moviepctColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n          </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default ActorPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/allen/Documents/GitHub/550project/client/src/pages/HomePage.js\";\nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getcharacterMbtiList, getmbtiMatches, gettop5mvmbti } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst characterColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name) //render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n\n}, {\n  title: 'movie_id',\n  dataIndex: 'movie_id',\n  key: 'movie_id',\n  sorter: (a, b) => a.movie_id.localeCompare(b.movie_id)\n}, {\n  title: 'mbti',\n  dataIndex: 'mbti',\n  key: 'mbti'\n}, // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n{\n  title: 'img_url',\n  dataIndex: 'img_url',\n  key: 'img_url'\n}];\nconst top5Columns = [{\n  title: 'movie_id',\n  dataIndex: 'movie_id',\n  key: 'movie_id',\n  sorter: (a, b) => a.movie_id.localeCompare(b.movie_id)\n}, {\n  title: 'movie_title',\n  dataIndex: 'movie_title',\n  key: 'movie_title',\n  sorter: (a, b) => a.movie_title.localeCompare(b.movie_id)\n}, {\n  title: 'mbti',\n  dataIndex: 'mbti',\n  key: 'mbti',\n  sorter: (a, b) => a.mbti.localeCompare(b.mbti)\n}];\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allcharacters: [],\n      PageNumber: 1,\n      PageSize: 10,\n      matchesResults: [],\n      top5: []\n    };\n    this.MbtiOnChange = this.MbtiOnChange.bind(this);\n    this.goToMatch = this.goToMatch.bind(this);\n  }\n\n  goToMatch(matchId) {\n    window.location = `/mbti_matches/${matchId}`;\n  }\n\n  MbtiOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getmbtiMatches(null, null, value).then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getcharacterMbtiList(null).then(res => {\n      this.setState({\n        allcharacters: res.results\n      });\n    });\n    getmbtiMatches(null, null, 'ESFP').then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n    gettop5mvmbti(null).then(res => {\n      this.setState({\n        top5: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All characters in our database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.allcharacters,\n          columns: characterColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 10,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Search characters for a given MBTI type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"ESFP\",\n          style: {\n            width: 120\n          },\n          onChange: this.MbtiOnChange,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"ISTJ\",\n            children: \"The Inspector ISTJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ISTP\",\n            children: \"The Crafter ISTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ISFJ\",\n            children: \"The Protector ISFJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ISFP\",\n            children: \"The Artist ISFP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"INFJ\",\n            children: \"The Advocate INFJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"INFP\",\n            children: \"The Mediator INFP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"INTJ\",\n            children: \"The Architect INTJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"INTP\",\n            children: \"The Thinker INTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ESTP\",\n            children: \"The Persuader ESTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ESTJ\",\n            children: \"The Director ESTJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ESFP\",\n            children: \"The Performer ESFP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ESFJ\",\n            children: \"The Caregiver ESFJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ENFP\",\n            children: \"The Champion ENFP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ENFJ\",\n            children: \"The Giver ENFJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ENTP\",\n            children: \"The Debater ENTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"ENTJ\",\n            children: \"The Commander ENTJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          onRow: (record, rowIndex) => {\n            return {\n              onClick: event => {\n                this.goToMatch(record.MatchId);\n              } // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n\n            };\n          },\n          dataSource: this.state.matchesResults,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"Name\",\n            dataIndex: \"Name\"\n          }, \"Name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"movie_id\",\n            dataIndex: \"movie_id\"\n          }, \"movie_id\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top5movie with most characters for a given MBTI type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.top5,\n          columns: top5Columns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 10,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/allen/Documents/GitHub/550project/client/src/pages/HomePage.js"],"names":["React","Table","Pagination","Select","MenuBar","getcharacterMbtiList","getmbtiMatches","gettop5mvmbti","Column","ColumnGroup","Option","characterColumns","title","dataIndex","key","sorter","a","b","Name","localeCompare","movie_id","top5Columns","movie_title","mbti","HomePage","Component","constructor","props","state","allcharacters","PageNumber","PageSize","matchesResults","top5","MbtiOnChange","bind","goToMatch","matchId","window","location","value","then","res","setState","results","componentDidMount","render","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper","record","rowIndex","onClick","event","MatchId"],"mappings":"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","sourcesContent":["\n   \nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\n\nimport MenuBar from '../components/MenuBar';\nimport { getcharacterMbtiList,getmbtiMatches,gettop5mvmbti } from '../fetcher';\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst characterColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    //render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'movie_id',\n    dataIndex: 'movie_id',\n    key: 'movie_id',\n    sorter: (a, b) => a.movie_id.localeCompare(b.movie_id),\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'img_url',\n    dataIndex: 'img_url',\n    key: 'img_url',\n  }\n];\n\nconst top5Columns = [\n  \n  {\n    title: 'movie_id',\n    dataIndex: 'movie_id',\n    key: 'movie_id',\n    sorter: (a, b) => a.movie_id.localeCompare(b.movie_id),\n  },\n\n  {\n    title: 'movie_title',\n    dataIndex: 'movie_title',\n    key: 'movie_title',\n    sorter: (a, b) => a.movie_title.localeCompare(b.movie_id),\n  },\n\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  }\n];\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allcharacters: [],\n      PageNumber: 1,\n      PageSize: 10,\n      matchesResults:[],\n      top5:[],\n    };\n    this.MbtiOnChange=this.MbtiOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n\n  }\n  goToMatch(matchId) {\n    window.location = `/mbti_matches/${matchId}`\n  }\n\n  MbtiOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getmbtiMatches(null,null,value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n  }\n\n  componentDidMount() {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getcharacterMbtiList(null).then(res => {\n      this.setState({ allcharacters: res.results })\n    })\n\n    getmbtiMatches(null, null, 'ESFP').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    gettop5mvmbti(null).then(res => {\n      this.setState({ top5: res.results })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>All characters in our database</h3>\n          <Table\n            dataSource={this.state.allcharacters}\n            columns={characterColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3>Search characters for a given MBTI type</h3>\n          <Select defaultValue=\"ESFP\" style={{ width: 120 }} onChange={this.MbtiOnChange}>\n            <Option value=\"ISTJ\">The Inspector ISTJ</Option>        \n            <Option value=\"ISTP\">The Crafter ISTP</Option>\n            <Option value=\"ISFJ\">The Protector ISFJ</Option>\n            <Option value=\"ISFP\">The Artist ISFP</Option>\n            <Option value=\"INFJ\">The Advocate INFJ</Option>\n            <Option value=\"INFP\">The Mediator INFP</Option>        \n            <Option value=\"INTJ\">The Architect INTJ</Option>\n            <Option value=\"INTP\">The Thinker INTP</Option>\n            <Option value=\"ESTP\">The Persuader ESTP</Option>\n            <Option value=\"ESTJ\">The Director ESTJ</Option>\n            <Option value=\"ESFP\">The Performer ESFP</Option>\n            <Option value=\"ESFJ\">The Caregiver ESFJ</Option>        \n            <Option value=\"ENFP\">The Champion ENFP</Option>\n            <Option value=\"ENFJ\">The Giver ENFJ</Option>\n            <Option value=\"ENTP\">The Debater ENTP</Option>\n            <Option value=\"ENTJ\">The Commander ENTJ</Option>\n          </Select>\n          \n          <Table onRow={(record, rowIndex) => {\n    return {\n      onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n    };\n  }} dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n          <Column title=\"Name\" dataIndex=\"Name\" key=\"Name\"/>\n          <Column title=\"movie_id\" dataIndex=\"movie_id\" key=\"movie_id\"/> \n          </Table>\n        </div>\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Top5movie with most characters for a given MBTI type</h3>\n          <Table\n            dataSource={this.state.top5}\n            columns={top5Columns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
[{"/Users/allen/Documents/GitHub/550project/client/src/index.js":"1","/Users/allen/Documents/GitHub/550project/client/src/pages/HomePage.js":"2","/Users/allen/Documents/GitHub/550project/client/src/fetcher.js":"3","/Users/allen/Documents/GitHub/550project/client/src/components/MenuBar.js":"4","/Users/allen/Documents/GitHub/550project/client/src/pages/Movieprofile.js":"5","/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPage.js":"6","/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPercent.js":"7","/Users/allen/Documents/GitHub/550project/client/src/pages/CharacterPage.js":"8"},{"size":1157,"mtime":1651976703097,"results":"9","hashOfConfig":"10"},{"size":5751,"mtime":1651976900026,"results":"11","hashOfConfig":"10"},{"size":2664,"mtime":1651976655729,"results":"12","hashOfConfig":"10"},{"size":840,"mtime":1651976498758,"results":"13","hashOfConfig":"10"},{"size":4145,"mtime":1651976906040,"results":"14","hashOfConfig":"10"},{"size":5810,"mtime":1651892429771,"results":"15","hashOfConfig":"10"},{"size":6179,"mtime":1651951558144,"results":"16","hashOfConfig":"10"},{"size":4975,"mtime":1651977059724,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s2zb5o",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/allen/Documents/GitHub/550project/client/src/index.js",[],"/Users/allen/Documents/GitHub/550project/client/src/pages/HomePage.js",["37","38","39","40","41"],"/Users/allen/Documents/GitHub/550project/client/src/fetcher.js",[],"/Users/allen/Documents/GitHub/550project/client/src/components/MenuBar.js",[],"/Users/allen/Documents/GitHub/550project/client/src/pages/Movieprofile.js",["42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPage.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74"],"import React from 'react';\nimport {\n  Form,\n  FormInput,\n  FormGroup,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Progress,\n} from 'shards-react';\n\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n  Rate,\n} from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\nimport MenuBar from '../components/MenuBar';\nimport { rankbymbti } from '../fetcher';\nconst wideFormat = format('.3r');\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst actorColumns = [\n//   {\n//       title: 'actor_id',\n//       dataIndex: 'actor_id',\n//       key: 'actor_id',\n//     //   sorter: (a, b) => a.actor_id.localeCompare(b.actor_id),\n//   },\n  {\n    title: 'primaryName',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n    sorter: (a, b) => a.primaryName.localeCompare(b.primaryName),\n    // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  },\n  {\n    title: 'count',\n    dataIndex: 'count',\n    key: 'count',\n    sorter: (a, b) => a.count - b.count,\n  }\n  // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actor_id: '',\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      countQuery: '',\n      actorsResults: [],\n      pctresults: []\n    };\n    \n\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    \n    this.handlePrimaryNameQueryChange = this.handlePrimaryNameQueryChange.bind(this);\n    this.handleActorIdQueryChange = this.handleActorIdQueryChange.bind(this);\n    this.handlembtiQueryChange =\n      this.handlembtiQueryChange.bind(this);\n    this.handleCountQueryChange = this.handleCountQueryChange.bind(this);\n    // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n  goToActorPtc(actid) {\n    console.log(actid)\n    window.location = `/actorpct/${actid}`\n  }\n\n  handleActorIdQueryChange(event){\n    this.setState({ actor_id: event.target.value });\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({ primaryNameQuery: event.target.value });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ mbtiQuery: event.target.value });\n  }\n\n  handleCountQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ countQuery: event.target.value });\n  }\n\n//   handleRatingChange(value) {\n//     this.setState({ ratingLowQuery: value[0] });\n//     this.setState({ ratingHighQuery: value[1] });\n//   }\n\n//   handlePotentialChange(value) {\n//     // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\n//     this.setState({ potLowQuery: value[0] });\n//     this.setState({ potHighQuery: value[1] });\n//   }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    rankbymbti(\n    //   this.state.nameQuery,\n    //   this.state.nationalityQuery,\n    //   this.state.clubQuery,\n    //   this.state.ratingHighQuery,\n    //   this.state.ratingLowQuery,\n    //   this.state.potHighQuery,\n    //   this.state.potLowQuery,\n      null\n\n    ).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n    console.log(this.state.actorsResults);\n  }\n\n  componentDidMount() {\n    rankbymbti(\n          null\n        ).then((res) => {\n          this.setState({ actorsResults: res.results });\n        });\n    console.log(this.state.actorsResults);\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        {/* <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>Actor ID</label>\n                    <FormInput placeholder=\"nm000000\" value={this.state.actor_id} onChange={this.handleActorIdQueryChange} />\n                </FormGroup></Col>\n                <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.goToActorPtc(this.state.actor_id)}>Search</Button>\n                        </FormGroup></Col>\n            </Row>\n\n        </Form> */}\n        <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Actors</h3>\n          <Table\n            dataSource={this.state.actorsResults}\n            columns={actorColumns}\n            onRow={(record, rowIndex) => {\n                return {\n                  onClick: event => {this.goToActorPtc(record.actor_id)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                };\n              }}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div>\n        {/* <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Percentage of MBTI types of characters the actor played </h3>\n          <Table\n            dataSource={this.state.pctresults}\n            columns={actorpctColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n          </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default ActorPage;\n",["75","76"],"/Users/allen/Documents/GitHub/550project/client/src/pages/ActorPercent.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport Chart from \"react-apexcharts\";\n\nimport MenuBar from '../components/MenuBar';\nimport { actorpct } from '../fetcher';\nconst wideFormat = format('.3r');\n\nconst actorColumns = [\n//   {\n//       title: 'actor_id',\n//       dataIndex: 'actor_id',\n//       key: 'actor_id',\n//       sorter: (a, b) => a.actor_id.localeCompare(b.actor_id),\n//   },\n  {\n    title: 'primaryName',\n    dataIndex: 'primaryName',\n    key: 'primaryName',\n    sorter: (a, b) => a.primaryName.localeCompare(b.primaryName),\n    // render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n  },\n  {\n    title: 'mbti',\n    dataIndex: 'mbti',\n    key: 'mbti',\n    sorter: (a, b) => a.mbti.localeCompare(b.mbti),\n  },\n  {\n    title: 'percentage',\n    dataIndex: 'percentage',\n    key: 'percentage',\n    sorter: (a, b) => a.count - b.count,\n  }\n  // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n];\n\nclass ActorPercentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actor_id: '',\n      primaryNameQuery: '',\n      mbtiQuery: '',\n      percentageQuery: '',\n      actorsResults: [],\n      pctresults: [],\n      series: [],\n      options: {},\n      labels: []\n\n        \n      \n    };\n    \n\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    \n    this.handlePrimaryNameQueryChange = this.handlePrimaryNameQueryChange.bind(this);\n    this.handleActorIdQueryChange = this.handleActorIdQueryChange.bind(this);\n    this.handlembtiQueryChange =\n      this.handlembtiQueryChange.bind(this);\n    this.handlepercentageQueryChange = this.handlepercentageQueryChange.bind(this);\n    // this.handleRatingChange = this.handleRatingChange.bind(this);\n    // this.handlePotentialChange = this.handlePotentialChange.bind(this);\n  }\n\n//   goToActorPtc(actid) {\n//     window.location = `/actorpct/${actid}`\n//   }\n\n  handleActorIdQueryChange(event){\n    this.setState({ actor_id: event.target.value });\n  }\n\n  handlePrimaryNameQueryChange(event) {\n    this.setState({ primaryNameQuery: event.target.value });\n  }\n\n  handlembtiQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ mbtiQuery: event.target.value });\n  }\n\n  handlepercentageQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({ percentageQuery: event.target.value });\n  }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    actorpct(\n      this.state.actor_id\n    ).then((res) => {\n      this.setState({ actorsResults: res.results });\n    });\n    \n  }\n\n  componentDidMount() {\n    const { actid } = this.props.match.params;\n    this.setState({ actor_id: actid });\n    actorpct(\n        actid\n        ).then((res) => {\n          \n          this.setState({ actorsResults: res.results });\n          console.log(this.state.actorsResults);\n          for (var i = 0; i < this.state.actorsResults.length; i++){\n            this.setState({ primaryNameQuery: res.results[0].primaryName})\n            this.setState({\n                series: this.state.series.concat(this.state.actorsResults[i].percentage)\n              });\n            \n            \n            this.setState({\n                labels: this.state.labels.concat(this.state.actorsResults[i].mbti)\n              });\n            console.log(this.state.labels);\n            }\n          this.setState({options : {labels: this.state.labels}})\n        });\n    \n    console.log(this.state.series);\n    console.log(this.state.actorsResults);\n\n  }\n\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        {/* <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>Actor ID</label>\n                    <FormInput placeholder=\"nm000000\" value={this.state.actor_id} onChange={this.handleActorIdQueryChange} />\n                </FormGroup></Col>\n                <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.goToActorPtc(this.state.actor_id)}>Search</Button>\n                        </FormGroup></Col>\n            </Row>\n\n        </Form> */}\n        {/* <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Actors</h3>\n          <Table\n            dataSource={this.state.actorsResults}\n            columns={actorColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </div> */}\n        <Divider />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>{this.state.primaryNameQuery}</h3>\n        <div className=\"ActorPercentPage\">\n            <div className=\"row\">\n                <div className=\"mixed-chart\">\n                    <Chart options={this.state.options} series={this.state.series} type=\"pie\" width={750} />\n                </div>\n            </div>\n        </div>\n        </div>\n        {/* <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Percentage of MBTI types of characters the actor played </h3>\n          <Table\n            dataSource={this.state.pctresults}\n            columns={actorpctColumns}\n            pagination={{\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n          </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ActorPercentPage);\n","/Users/allen/Documents/GitHub/550project/client/src/pages/CharacterPage.js",["95","96","97","98","99","100","101","102","103","104","105","106","107"],{"ruleId":"108","severity":1,"message":"109","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":27},{"ruleId":"108","severity":1,"message":"112","line":5,"column":31,"nodeType":"110","messageId":"111","endLine":5,"endColumn":45},{"ruleId":"108","severity":1,"message":"113","line":6,"column":9,"nodeType":"110","messageId":"111","endLine":6,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":6,"column":17,"nodeType":"110","messageId":"111","endLine":6,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":14,"column":25,"nodeType":"117","endLine":14,"endColumn":87},{"ruleId":"108","severity":1,"message":"118","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"119","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"108","severity":1,"message":"120","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"108","severity":1,"message":"121","line":3,"column":38,"nodeType":"110","messageId":"111","endLine":3,"endColumn":44},{"ruleId":"108","severity":1,"message":"122","line":3,"column":62,"nodeType":"110","messageId":"111","endLine":3,"endColumn":71},{"ruleId":"108","severity":1,"message":"123","line":3,"column":73,"nodeType":"110","messageId":"111","endLine":3,"endColumn":81},{"ruleId":"108","severity":1,"message":"109","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":15},{"ruleId":"108","severity":1,"message":"124","line":11,"column":5,"nodeType":"110","messageId":"111","endLine":11,"endColumn":11},{"ruleId":"108","severity":1,"message":"125","line":12,"column":5,"nodeType":"110","messageId":"111","endLine":12,"endColumn":9},{"ruleId":"108","severity":1,"message":"126","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":20},{"ruleId":"108","severity":1,"message":"127","line":15,"column":10,"nodeType":"110","messageId":"111","endLine":15,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":19,"column":9,"nodeType":"110","messageId":"111","endLine":19,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":19,"column":17,"nodeType":"110","messageId":"111","endLine":19,"endColumn":28},{"ruleId":"108","severity":1,"message":"128","line":20,"column":9,"nodeType":"110","messageId":"111","endLine":20,"endColumn":15},{"ruleId":"108","severity":1,"message":"129","line":22,"column":7,"nodeType":"110","messageId":"111","endLine":22,"endColumn":24},{"ruleId":"108","severity":1,"message":"118","line":3,"column":3,"nodeType":"110","messageId":"111","endLine":3,"endColumn":7},{"ruleId":"108","severity":1,"message":"119","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":12},{"ruleId":"108","severity":1,"message":"120","line":5,"column":3,"nodeType":"110","messageId":"111","endLine":5,"endColumn":12},{"ruleId":"108","severity":1,"message":"121","line":6,"column":3,"nodeType":"110","messageId":"111","endLine":6,"endColumn":9},{"ruleId":"108","severity":1,"message":"130","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":7},{"ruleId":"108","severity":1,"message":"131","line":8,"column":3,"nodeType":"110","messageId":"111","endLine":8,"endColumn":11},{"ruleId":"108","severity":1,"message":"122","line":9,"column":3,"nodeType":"110","messageId":"111","endLine":9,"endColumn":12},{"ruleId":"108","severity":1,"message":"123","line":10,"column":3,"nodeType":"110","messageId":"111","endLine":10,"endColumn":11},{"ruleId":"108","severity":1,"message":"109","line":15,"column":3,"nodeType":"110","messageId":"111","endLine":15,"endColumn":13},{"ruleId":"108","severity":1,"message":"132","line":17,"column":3,"nodeType":"110","messageId":"111","endLine":17,"endColumn":6},{"ruleId":"108","severity":1,"message":"133","line":18,"column":3,"nodeType":"110","messageId":"111","endLine":18,"endColumn":6},{"ruleId":"108","severity":1,"message":"124","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":20,"endColumn":9},{"ruleId":"108","severity":1,"message":"125","line":21,"column":3,"nodeType":"110","messageId":"111","endLine":21,"endColumn":7},{"ruleId":"108","severity":1,"message":"126","line":23,"column":10,"nodeType":"110","messageId":"111","endLine":23,"endColumn":20},{"ruleId":"108","severity":1,"message":"134","line":28,"column":7,"nodeType":"110","messageId":"111","endLine":28,"endColumn":17},{"ruleId":"108","severity":1,"message":"113","line":29,"column":9,"nodeType":"110","messageId":"111","endLine":29,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":29,"column":17,"nodeType":"110","messageId":"111","endLine":29,"endColumn":28},{"ruleId":"108","severity":1,"message":"128","line":30,"column":9,"nodeType":"110","messageId":"111","endLine":30,"endColumn":15},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"108","severity":1,"message":"118","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"119","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"108","severity":1,"message":"120","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"108","severity":1,"message":"121","line":3,"column":38,"nodeType":"110","messageId":"111","endLine":3,"endColumn":44},{"ruleId":"108","severity":1,"message":"130","line":3,"column":46,"nodeType":"110","messageId":"111","endLine":3,"endColumn":50},{"ruleId":"108","severity":1,"message":"131","line":3,"column":52,"nodeType":"110","messageId":"111","endLine":3,"endColumn":60},{"ruleId":"108","severity":1,"message":"122","line":3,"column":62,"nodeType":"110","messageId":"111","endLine":3,"endColumn":71},{"ruleId":"108","severity":1,"message":"123","line":3,"column":73,"nodeType":"110","messageId":"111","endLine":3,"endColumn":81},{"ruleId":"108","severity":1,"message":"139","line":5,"column":5,"nodeType":"110","messageId":"111","endLine":5,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":15},{"ruleId":"108","severity":1,"message":"140","line":7,"column":5,"nodeType":"110","messageId":"111","endLine":7,"endColumn":11},{"ruleId":"108","severity":1,"message":"132","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":8},{"ruleId":"108","severity":1,"message":"133","line":9,"column":5,"nodeType":"110","messageId":"111","endLine":9,"endColumn":8},{"ruleId":"108","severity":1,"message":"124","line":11,"column":5,"nodeType":"110","messageId":"111","endLine":11,"endColumn":11},{"ruleId":"108","severity":1,"message":"125","line":12,"column":5,"nodeType":"110","messageId":"111","endLine":12,"endColumn":9},{"ruleId":"108","severity":1,"message":"126","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":20},{"ruleId":"108","severity":1,"message":"134","line":20,"column":7,"nodeType":"110","messageId":"111","endLine":20,"endColumn":17},{"ruleId":"108","severity":1,"message":"141","line":22,"column":7,"nodeType":"110","messageId":"111","endLine":22,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":7},{"ruleId":"108","severity":1,"message":"119","line":5,"column":3,"nodeType":"110","messageId":"111","endLine":5,"endColumn":12},{"ruleId":"108","severity":1,"message":"120","line":6,"column":3,"nodeType":"110","messageId":"111","endLine":6,"endColumn":12},{"ruleId":"108","severity":1,"message":"121","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":9},{"ruleId":"108","severity":1,"message":"109","line":14,"column":3,"nodeType":"110","messageId":"111","endLine":14,"endColumn":13},{"ruleId":"108","severity":1,"message":"140","line":15,"column":3,"nodeType":"110","messageId":"111","endLine":15,"endColumn":9},{"ruleId":"108","severity":1,"message":"124","line":19,"column":3,"nodeType":"110","messageId":"111","endLine":19,"endColumn":9},{"ruleId":"108","severity":1,"message":"125","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":20,"endColumn":7},{"ruleId":"108","severity":1,"message":"126","line":22,"column":10,"nodeType":"110","messageId":"111","endLine":22,"endColumn":20},{"ruleId":"108","severity":1,"message":"134","line":27,"column":7,"nodeType":"110","messageId":"111","endLine":27,"endColumn":17},{"ruleId":"108","severity":1,"message":"114","line":28,"column":17,"nodeType":"110","messageId":"111","endLine":28,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":35,"column":25,"nodeType":"117","endLine":35,"endColumn":87},{"ruleId":"115","severity":1,"message":"142","line":110,"column":21,"nodeType":"117","endLine":115,"endColumn":23},"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'getmbtiMatches' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'Slider' is defined but never used.","'Rate' is defined but never used.","'RadarChart' is defined but never used.","'format' is defined but never used.","'Option' is assigned a value but never used.","'matchmovieColumns' is assigned a value but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'wideFormat' is assigned a value but never used.","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'Table' is defined but never used.","'Select' is defined but never used.","'actorColumns' is assigned a value but never used.","Invalid alt value for img. Use alt=\"\" for presentational images.","no-global-assign","no-unsafe-negation"]